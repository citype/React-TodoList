{"ast":null,"code":"import _classCallCheck from \"/Users/xihe/Documents/React-TodoList/todo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/xihe/Documents/React-TodoList/todo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/xihe/Documents/React-TodoList/todo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/xihe/Documents/React-TodoList/todo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/xihe/Documents/React-TodoList/todo/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/xihe/Documents/React-TodoList/todo/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/xihe/Documents/React-TodoList/todo/src/TodoItem.js\";\nimport React, { Component } from 'react';\n\nvar TodoItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoItem, _Component);\n\n  _createClass(TodoItem, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      // 删除父组件中list的内容\n      // 调用父组件的 handleItemDelete 方法 把父组件的方法也传递过来即可！！\n      var _this$props = this.props,\n          deleteItem = _this$props.deleteItem,\n          index = _this$props.index;\n      deleteItem(index);\n    }\n  }]);\n\n  function TodoItem(props) {\n    var _this;\n\n    _classCallCheck(this, TodoItem);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TodoItem).call(this, props)); // 可以节约性能\n\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TodoItem, [{\n    key: \"render\",\n    value: function render() {\n      var content = this.props.content;\n      return React.createElement(\"li\", {\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, content);\n    }\n  }]);\n\n  return TodoItem;\n}(Component);\n\nexport default TodoItem;","map":{"version":3,"sources":["/Users/xihe/Documents/React-TodoList/todo/src/TodoItem.js"],"names":["React","Component","TodoItem","props","deleteItem","index","handleClick","bind","content"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;;IAEMC,Q;;;;;;;kCACU;AACZ;AACA;AAFY,wBAGgB,KAAKC,KAHrB;AAAA,UAGLC,UAHK,eAGLA,UAHK;AAAA,UAGOC,KAHP,eAGOA,KAHP;AAIZD,MAAAA,UAAU,CAACC,KAAD,CAAV;AACD;;;AACD,oBAAYF,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN,GADiB,CAEjB;;AACA,UAAKG,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;AAHiB;AAKlB;;;;6BACQ;AAAA,UACEC,OADF,GACc,KAAKL,KADnB,CACEK,OADF;AAEL,aAAO;AAAI,QAAA,OAAO,EAAE,KAAKF,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgCE,OAAhC,CAAP;AACH;;;;EAhBoBP,S;;AAmBvB,eAAeC,QAAf","sourcesContent":["import React,{Component} from 'react'\n\nclass TodoItem extends Component {\n  handleClick() {\n    // 删除父组件中list的内容\n    // 调用父组件的 handleItemDelete 方法 把父组件的方法也传递过来即可！！\n    const {deleteItem, index} = this.props;\n    deleteItem(index);\n  }\n  constructor(props) {\n    super(props);\n    // 可以节约性能\n    this.handleClick = this.handleClick.bind(this);\n    \n  }\n  render() {\n      const {content} =  this.props\n      return <li onClick={this.handleClick}>{content}</li>;\n  }\n}\n\nexport default TodoItem;"]},"metadata":{},"sourceType":"module"}